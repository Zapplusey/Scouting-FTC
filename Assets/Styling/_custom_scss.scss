@use "sass:map";
@use "sass:color";
@use "sass:math";
@import "./fonts_css";

$main-hue: 205deg; // previously 205deg
$landscape-ratio: 11/9;


$lightness-values: (
  1: 10,
  2: 20,
  3: 30,
  4: 40,
  5: 50,
  6: 60,
  7: 70,
  8: 80,
  9: 90,
  10: 100,
  light: 97,
  dark: 3,
  0: 0,
);

$saturation-values: (
  0: 0,
  1: 10,
  2: 20,
  3: 30,
  4: 40,
  5: 50,
  6: 60,
  7: 70,
  8: 80,
  9: 90,
  10: 100,
  light: 100,
  dark: 0,
  middle-ground: 55,
  mixed: 65,
);

@function getCC($saturation: 5,
  $lightness: 5,
  $opacity: 1,
  $adjust-hue: 0deg,
  $saturation-add: 0,
  $lightness-add: 0) {
  @return hsla($main-hue + $adjust-hue,
    (map.get($saturation-values, $saturation) + $saturation-add) * 1%,
    (map.get($lightness-values, $lightness) + $lightness-add) * 1%,
    $opacity );
}

@mixin glass($blur: 5px, $background: linear-gradient(135deg, getCC(1, 10, 0.1), getCC(1, 10, 0)), $border: 1px solid getCC(1, 10, 0.18), $shadow-extent: 32.9848px, $shadow-direction: 75.96406924deg) {
  background: $background;
  backdrop-filter: blur($blur);
  border: $border;
  box-shadow: 0 (math.cos($shadow-direction)*$shadow-extent) (math.sin($shadow-direction)*$shadow-extent) 0 getCC(1, 1, 0.37);
}

@mixin tooltip($offsetX: 0em, $offsetY: 3em, $appearDelay: 725ms, $disappearDelay: 0ms) {
  &::after {
    content: var(--tooltip-text);
    font-family: inherit;
    width: fit-content;
    height: fit-content;
    white-space: nowrap;
    text-align: center;
    position: absolute;
    display: block;
    color: getCC(8, 10, 0.8);
    background-color: getCC(8, 10, 0.2);
    border-radius: 0.3em;
    padding: 0 0.2em;
    translate: $offsetY $offsetX;
    transition: opacity 300ms ease $disappearDelay;
    pointer-events: none;
    opacity: 0;
  }

  &:hover::after {
    transition-delay: $appearDelay;
    opacity: 1;
  }

  &.active::after {
    transition-delay: $disappearDelay;
    opacity: 0;
  }
}

@mixin flexing($direction: column,
  $spacing: space-around,
  $alignment: center,
  $item-alignment: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $spacing;
  align-content: $alignment;
  align-items: $item-alignment;
}

@media screen and (min-aspect-ratio:10/9) {
  :root {
    font-size: 20px;
  }
}

body {
  width: 100vw;
  min-height: 100vh;
  margin: 0px;
  padding: 0px;
  overflow-x: hidden;
  overflow-y: scroll;
  display: flex;
  flex-direction: row;
  background-color: getCC(6, 1, 1, 0deg, 0, 4);

  * {
    position: relative;
    margin: 0;
    padding: 0;
  }

  @include flexing();
}

* {
  font-family: "QuickSand";
}

.hebrew,
.hebrew * {
  font-family: "Varela Round";
}

::-webkit-scrollbar {
  width: initial;
}

::-webkit-scrollbar-track {
  background: linear-gradient(-90deg, getCC(10, 2) 0%, getCC(10, 3) 100%);
}

::-webkit-scrollbar-thumb {
  background: getCC(8, 6);
}

::-webkit-scrollbar-corner {
  background: none;
  box-shadow: 0em 0em 0.5vh getCC(5, 5) inset;
}